节点类型：
    元素节点 ---- 1
    属性节点 ---- 2
    文本节点 ---- 3
    注释节点 ---- 8
    Document ---- 9
    DocumentFragment ---- 11

遍历节点树：
    parentNodes   ---   父节点 （最顶端的父节点为#document）
    childNodes    ---   子节点集合
    firstChild    ---   第一个子节点
    lastChild     ---   最后一个子节点
    nextSibling   ---   后一个兄弟节点
    previousSibling  ---   前一个兄弟节点


基于元素节点的遍历：
    parentElement   ---   返回当前元素的父元素节点(IE9以下不兼容)
    children   ---   返回当前元素的所有元素子节点。(兼容IE9以下)
    firstElementChild   ---  返回第一个元素节点(IE9以下不兼容)
    lastElementChild   ---  返回最后一个元素节点(IE9以下不兼容)
    nextElementSibling   ---   返回下一个兄弟元素节点(IE9以下不兼容)
    previousElementSibling   ---   返回上一个兄弟元素节点(IE9以下不兼容)


节点的四个属性：
    nodeName  --- 元素的标签名，以大写形式表示，只读。比如：DIV INPUT SPAN ...
    nodeType  --- 返回节点的节点类型。
    nodeValue  ---  返回节点值。 ===>  xx.childNodes[0].nodeValue
    attributes   ---  获取元素属性的集合。
        比如：<div id="box" data-target="nav">
        box.attributes   ===>   {0: id,1: data-target,length: 2}


Dom的基本操作：
    document代表整个文档。它与大Document存在以下关系。
    document.__proto__  === HTMLDocument.prototype
    HTMLDocument.__proto__ === Document
    Document.__proto__ === Node

    从以上原型继承可以看出document是Document的一个实例对象。就好比：
        function Document(){}
        var document = new Document();

document.getElementById('box').__proto__ === HTMLDivElement.prototype
HTMLDivElement.__proto__ === HTMLElement
HTMLElement.__proto__ === Element
Element.__proto__ === Node
Node.__proto__ === EventTarget
EventTarget.__proto__ === Function.prototype
Function.__proto__ === Function.prototype


document.getElementById('xx')：获取属性id为xx的元素。该方法是定义在Document.prototype上，所以Element节点不能用。
document.getElementsByName('xx')：获取属性name为xx的元素。该方法定义在HTMLDocument.prototype上。
document.getElementsByTagName('xx')：获取标签名为xx的元素集合。该方法定义在Document.prototype和Element.prototype上。
document.body：获取到body标签。
document.title：获取到title标签。
document.documentElement：获取到整个html标签区域
document.querySelector('xx')：以css获取方式来获取元素。放方法不支持IE9以下，并且该方法获取的数据不实时更新。
document.querySelectorAll('xx')：以css获取方式获取一组元素。